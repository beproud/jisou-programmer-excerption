============================================
2:関数名ではより具体的な意味の英単語を使おう
============================================

関数名からはより具体的な意味を類推できることが重要です。
関数名に使う言葉を「より狭い意味」の単語に置き換えることで意味が伝わりやすくなります。

関数名に ``get_`` ばかりを使ってしまった例を見てみましょう。

具体的な失敗
======================

.. code:: 

   def get_latest_news():
       ...

   def get_tax_including(price):
       ...

   def get_sum_price(items):
       ...

この失敗では「何かを取得する」という意味ですべての関数名が ``get_`` になっています。
ですが、関数が具体的にどういう動作をするかまで、 ``get`` という英単語からは想像できません。
外部へのアクセスがどれだけ発生するのか、どれだけ計算処理が発生するのか、データベースへのアクセスがあるのかわからないのは問題です。

ベストプラクティス
==================

より狭い意味の英単語を使いましょう。
処理の内容を想像できる「より狭い」英単語を使います。

.. code:: python

   def fetch_latest_news():
       ...

   def calc_tax_including(price):
       ...

   def aggregate_sum_price(items):
       ...

.. omission::

関連
====

* :doc:`../関数設計/1-関数名は処理内容を想像できる名前にする`
* :doc:`../関数設計/3-関数名から想像できる型の戻り値を返す`