===========================
33:公式ドキュメントを読もう
===========================

.. maigo:: 公式ドキュメントは難しいので正解をWebで検索しました

    * 先輩T：このDjango ModelFormのコード、なんかすごい不思議な書き方になってるんだけど、どうしてこうなったｗ
    * 後輩W：ModelFormの使い方がよくわからなくて、いろいろ調べて書きました。
    * 先輩T：うーん、それはどうやって調べたの？
    * 後輩W：いろいろググって調べたんですが、良い感じの情報がなくて……。
    * 先輩T：そっかー。で、この書き方はどこに書いてあったやつ？
    * 後輩W：すいません、ちょっと覚えてません。
    * 先輩T：公式ドキュメントは読んだ？
    * 後輩W：ちょっとは読んだんですが、よくわからなくていろいろググってました。
    * 先輩T：公式ドキュメントのここに、そのまんまの使い方が書いてあるで。
    * 後輩W：あれ……ほんとだ……。

よく使われている言語やライブラリのドキュメントには、いろいろなことが書かれています。
利用者が多ければ多いほど、利用者それぞれの疑問に応えるドキュメントが用意されています。
ただし、利用者すべての個別の使い方向けのサンプルを用意するのではなく、抽象度の高い **原理や概念** を説明するドキュメントが用意されることもよくあります。

しかし、「迷子」はこういった抽象度の高いドキュメントを読み解くよりも、自分と全く同じケースの課題を解決した「具体的な正解」を検索して見つけようとしてしまいます。
そのため、誰かのblog等で近いケースを見つけると、 **原理や概念** を理解しないままコードを使おうとして、うまく動作しなかったり、解釈が難しい複雑なコードを書いてしまいます。
あとから振り返って、公式ドキュメントを読み解くことがゴールへの最短ルートだった、ということがよくあります。

.. todo:: 不思議な書き方のコード例と、正しい情報元による正しい書き方を例示する

ベストプラクティス
==================

.. index:: 公式ドキュメント
.. index:: 原典
.. index:: キーワード
.. index:: 用語集

公式ドキュメント（原典）を読みましょう。このとき、時間を制限して取り組むのが大事です。

調べるための **キーワード** がわかっていれば、そのキーワードで検索することで公式ドキュメントの読むべき箇所を見つけられます。
キーワードがわからない、見つからないときは、 **用語集** を探す、といったアプローチが有効です。
仕事のプロジェクトでは用語集をまとめることで曖昧になりがちな言葉の定義を明確にします。
用語集になければ、検索を活用して、徐々にキーワードに近づいていく、という方法が使えます。 [#pyqpro01]_

.. [#pyqpro01] エンジニアの「プロの所作」01. まず自分で調べる ：「自分主体で考えて作る」第1歩。わからないことを調べる所作を伝えます - Python学習チャンネル by PyQ: https://blog.pyq.jp/entry/professionalism_of_engineer_01

.. omission::

